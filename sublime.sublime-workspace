{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"turnOn",
				"turnOnMotorS0"
			],
			[
				"li",
				"list_of_characters"
			],
			[
				"hori",
				"horizontalwordsobjects"
			],
			[
				"object",
				"objectword"
			],
			[
				"hor",
				"horizontalwords"
			],
			[
				"add",
				"addcharacter"
			],
			[
				"d",
				"d"
			],
			[
				"mes",
				"message"
			]
		]
	},
	"buffers":
	[
		{
			"file": "script.py",
			"settings":
			{
				"buffer_size": 7127,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import pyscreenshot as ImageGrab\nfrom PIL import Image\nimport os\nimport time\nimport pytesseract\n\ncenter_box = (347,501,369,523)\n\npytesseract.pytesseract.tesseract_cmd = 'C:/Program Files (x86)/Tesseract-OCR/tesseract'\ndef screenGrab():\t\n\t#box holds the 4 parameters of the bounding box of the screenshot\n#    box = (194+1, 394+1, 522, 676)\n#    im = ImageGrab.grab()\n#    \n#    im.save(os.getcwd() + '\\\\recognize.png', 'PNG')\n\tim = Image.open('colortest.png')\n\tR, G, B = im.convert('RGB').split()\n\tr = R.load()\n\tg = G.load()\n\tb = B.load()\n\tw, h = im.size\n\n\t# Convert non-black pixels to white\n\tfor i in range(w):\n\t    for j in range(h):\n\t        if(r[i, j] != 0 or g[i, j] != 0 or b[i, j] != 0):\n\t            r[i, j] = 255 # Just change R channel\n\n\t# Merge just the R channel as all channels\n\tim = Image.merge('RGB', (R, R, R))\n\ttext = pytesseract.image_to_string(im)\n\tim.save(os.getcwd() + '\\\\export.png', 'PNG')\n\tprint(\"text recognized is : \" + str(text))\n\nif __name__ == '__main__':\n\tscreenGrab()",
			"file": "screencapture.py",
			"file_size": 1057,
			"file_write_time": 131619874648547539,
			"settings":
			{
				"buffer_size": 999,
				"line_ending": "Windows"
			}
		},
		{
			"file": "mousecommands.py",
			"settings":
			{
				"buffer_size": 470,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 300,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "import client_wwf as WWF"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Chris Dryden/Desktop/projects/WordsWithFriendsBot/client_wwf",
		"/C/Users/Chris Dryden/Desktop/projects/2018/Shopify/main.py",
		"/C/Users/Chris Dryden/Desktop/projects/2018/Search By Convolution Unsupervised Learning/visualsearch/output.py",
		"/C/Users/Chris Dryden/Desktop/projects/2018/Sentiment Analysis/sentiment.py",
		"/C/Users/Chris Dryden/Desktop/projects/2018/Search By Convolution Unsupervised Learning/visualsearch/server.py",
		"/C/Users/Chris Dryden/Desktop/projects/Data Science Hackathon/import.py",
		"/C/Users/Chris Dryden/Desktop/projects/Data Science Hackathon/speedlimit.py",
		"/C/UTSUCoin/CustomGenesis.json",
		"/C/Users/Chris Dryden/Desktop/sub1.s",
		"/C/Users/Chris Dryden/Desktop/projects/2018/Search By Convolution Unsupervised Learning/visualsearch/dict.json",
		"/C/Users/Chris Dryden/Desktop/Github Repositories/lib/chrisdryden/UofTHack/package.json",
		"/C/Users/Chris Dryden/Desktop/Github Repositories/lib/chrisdryden/UofTHack/functions/__main__.js"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" \n",
			"\t",
			"get_features",
			"r12",
			"_",
			"\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    ",
			"r11",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "script.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7127,
						"regions":
						{
						},
						"selection":
						[
							[
								1525,
								1525
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3774.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "screencapture.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 999,
						"regions":
						{
						},
						"selection":
						[
							[
								236,
								236
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "mousecommands.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 470,
						"regions":
						{
						},
						"selection":
						[
							[
								470,
								470
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 300,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"auto_name": "import client_wwf as WWF",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sublime.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
